source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
install.packages(dplyr)
install.packages("ggplot2")
install.packages("extrafont")
install.packages("ggthemes")
install.packages("gplots")
install.packages("grid")
install.packages("jsonlite")
install.packages("lubridate")
install.packages("rcurl")
install.packages("Rcurl")
install.packages("RCurl")
install.packages("reshape2")
install.packages("tableplot")
install.packages("tidyr")
install.packages("dplyr")
install.packages(dplyr)
install.packages(dplyr)
install.packages(dplyr)
install.packages(dplyr)
install.packages(dplyr)
source('~/.active-rstudio-document')
install.packages("dplyr")
source('~/.active-rstudio-document')
install.packages("dplyr")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
View(df)
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
View(df)
install.packages("tibble")
install.packages("rmatdown")
install.packages("rmatdown")
source('~/.active-rstudio-document')
install.packages("rmarkdown")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/.Rprofile.r')
install.packages("tidyr")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/.Rprofile.r')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/.Rprofile.r')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
summary(df)
head(df)
df
setwd("C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/DrCannata/02 Grammar of Graphics with R and ggplot2/Plotting Function Example.R')
require(readr)
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
require("jsonlite")
require("RCurl")
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from emp"')),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-and-dept', USER='fernandoruiz', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
View(df)
require("jsonlite")
require("RCurl")
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from emp"')),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-and-dept', USER='fernandoruiz', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER='fernandoruiz', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df2)
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
View(df)
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c(" ", "PID",	"county",	"state",	"area",	"poptotal",	"popdensity",	"popwhite",	"popblack",	"popamerindian",	"popasian",	"popother",	"percwhite",	"percblack",	"percamerindan",	"percasian",	"percother",	"popadults",	"perchsd",	"percollege",	"percprof",	"poppovertyknown",	"percpovertyknown",	"percbelowpoverty",	"percchildbelowpovert",	"percadultpoverty",	"percelderlypoverty",	"inmetro",	"category")
write.csv(file="ETLOutMidwest.csv", x = df, row.names=FALSE, na = "")
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df)
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from emp"')),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-and-dept', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c(" ", "PID",	"county",	"state",	"area",	"poptotal",	"popdensity",	"popwhite",	"popblack",	"popamerindian",	"popasian",	"popother",	"percwhite",	"percblack",	"percamerindan",	"percasian",	"percother",	"popadults",	"perchsd",	"percollege",	"percprof",	"poppovertyknown",	"percpovertyknown",	"percbelowpoverty",	"percchildbelowpovert",	"percadultpoverty",	"percelderlypoverty",	"inmetro",	"category")
View(df)
shiny::runApp('DrCannata/09 Crosstabs')
runApp('DrCannata/09 Crosstabs')
runApp('DrCannata/09 Crosstabs')
install.packages("remotes")
library(remotes)
remotes::install_github("datadotworld/data.world-r")
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
shiny::runApp('DrCannata/09TableauExamples')
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT IL.State, IL.AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IL"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df)
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
View(df)
colnames(df) <- c("state", "county", "MaleFullTimeIncome", "FemaleFullTimeIncome")
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern="[ county, Illinois]",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Illinois",replacement= ""))
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT IL.State, IL.AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IL"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("state", "county", "MaleFullTimeIncome", "FemaleFullTimeIncome")
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
write.csv(file="ETLMidwestMaleFemaleIncome.csv", x = df, row.names=FALSE, na = "")
setwd("C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/dvproject5/01 Data")
write.csv(file="ETLMidwestMaleFemaleIncome.csv", x = df, row.names=FALSE, na = "")
tolower(df["county"])
tolower(df)
tolower(df)
View(df)
df = as.data.frame(sapply(df, toupper))
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT IL.State, IL.AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IL"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("state", "county", "MaleFullTimeIncome", "FemaleFullTimeIncome")
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df = as.data.frame(sapply(df["county"], toupper))
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT IL.State, IL.AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IL"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("state", "county", "MaleFullTimeIncome", "FemaleFullTimeIncome")
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] = as.data.frame(sapply(df["county"], toupper))
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT IL.State, IL.AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IL"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("state", "county", "MaleFullTimeIncome", "FemaleFullTimeIncome")
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] = as.data.frame(sapply(df["county"], toupper))
write.csv(file="ETLCensusMaleFemaleIncome.csv", x = df, row.names=FALSE, na = "")
IL <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IL"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
IN <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IN"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
IN <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IN"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
MI <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM MI"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
IN <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM `IN`"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
OH <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM OH"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
WI <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM WI"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
df <- rbind(IL, IN)
df <- rbind(df, MI)
df <- rbind(df, OH)
df <- rbind(df, WI)
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
IL <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM IL"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
IN <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM `IN`"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
MI <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM MI"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
OH <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM OH"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
WI <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="SELECT State, AreaName, B19325_005 as maleIncome, B19325_052 as femaleIncome FROM WI"')),httpheader=c(DB='jdbc:data:world:sql:uscensusbureau:acs-2015-5-e-income', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
df <- rbind(IL, IN)
df <- rbind(df, MI)
df <- rbind(df, OH)
df <- rbind(df, WI)
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("state", "county", "MaleFullTimeIncome", "FemaleFullTimeIncome")
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Illinois",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Michigan",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Michigan",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, michigan",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, michigan",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Indiana",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Indiana",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, indiana",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, indiana",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Ohio",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Ohio",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, ohio",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, ohio",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, Wisconsin",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, Wisconsin",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" County, wisconsin",replacement= ""))
df["county"] <- data.frame(lapply(df["county"], gsub, pattern=" county, wisconsin",replacement= ""))
df["county"] = as.data.frame(sapply(df["county"], toupper))
write.csv(file="ETLCensusMaleFemaleIncome.csv", x = df, row.names=FALSE, na = "")
runApp('C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/dvproject5/02 Shiney/JacobTempleShiny')
runApp('C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/dvproject5/02 Shiney')
require(ggplot2)
require(dplyr)
require(shiny)
require(shinydashboard)
require(data.world)
require(readr)
require(DT)
runApp('C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/dvproject5/02 Shiney')
runApp('C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/dvproject5/02 Shiney/JacobTempleShiny')
runApp('C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/dvproject5/02 Shiney/JacobTempleShiny')
runApp('C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/dvproject5/02 Shiney/JacobTempleShiny')
