source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
install.packages(dplyr)
install.packages("ggplot2")
install.packages("extrafont")
install.packages("ggthemes")
install.packages("gplots")
install.packages("grid")
install.packages("jsonlite")
install.packages("lubridate")
install.packages("rcurl")
install.packages("Rcurl")
install.packages("RCurl")
install.packages("reshape2")
install.packages("tableplot")
install.packages("tidyr")
install.packages("dplyr")
install.packages(dplyr)
install.packages(dplyr)
install.packages(dplyr)
install.packages(dplyr)
install.packages(dplyr)
source('~/.active-rstudio-document')
install.packages("dplyr")
source('~/.active-rstudio-document')
install.packages("dplyr")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
View(df)
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
View(df)
install.packages("tibble")
install.packages("rmatdown")
install.packages("rmatdown")
source('~/.active-rstudio-document')
install.packages("rmarkdown")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/.Rprofile.r')
install.packages("tidyr")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/.Rprofile.r')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/.Rprofile.r')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/Access data.world Database.R')
summary(df)
head(df)
df
setwd("C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation")
source('C:/Users/Fernnando/Dropbox/UT/Senior/Spring \'17/DataVisualisation/DrCannata/02 Grammar of Graphics with R and ggplot2/Plotting Function Example.R')
require(readr)
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
require("jsonlite")
require("RCurl")
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from emp"')),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-and-dept', USER='fernandoruiz', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
View(df)
require("jsonlite")
require("RCurl")
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from emp"')),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-and-dept', USER='fernandoruiz', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER='fernandoruiz', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df2)
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
View(df)
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c(" ", "PID",	"county",	"state",	"area",	"poptotal",	"popdensity",	"popwhite",	"popblack",	"popamerindian",	"popasian",	"popother",	"percwhite",	"percblack",	"percamerindan",	"percasian",	"percother",	"popadults",	"perchsd",	"percollege",	"percprof",	"poppovertyknown",	"percpovertyknown",	"percbelowpoverty",	"percchildbelowpovert",	"percadultpoverty",	"percelderlypoverty",	"inmetro",	"category")
write.csv(file="ETLOutMidwest.csv", x = df, row.names=FALSE, na = "")
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df)
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from emp"')),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-and-dept', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select * from midwest"')),httpheader=c(DB='jdbc:data:world:sql:jacobbtemple:midwest', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c(" ", "PID",	"county",	"state",	"area",	"poptotal",	"popdensity",	"popwhite",	"popblack",	"popamerindian",	"popasian",	"popother",	"percwhite",	"percblack",	"percamerindan",	"percasian",	"percother",	"popadults",	"perchsd",	"percollege",	"percprof",	"poppovertyknown",	"percpovertyknown",	"percbelowpoverty",	"percchildbelowpovert",	"percadultpoverty",	"percelderlypoverty",	"inmetro",	"category")
View(df)
shiny::runApp('DrCannata/09 Crosstabs')
runApp('DrCannata/09 Crosstabs')
runApp('DrCannata/09 Crosstabs')
install.packages("remotes")
library(remotes)
remotes::install_github("datadotworld/data.world-r")
shiny::runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
df2 <- eventReactive(input$click2, {
print("Getting from data.world")
tdf = query(
data.world(token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmphY29iYnRlbXBsZSIsImlzcyI6ImFnZW50OmphY29iYnRlbXBsZTo6NTlkNDhjOTktNGVhMy00OTNlLTk0OGQtZWNjMDlhODhmMGY1IiwiaWF0IjoxNDkyNDgyMjA1LCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.ZbvoSVOGE5N4fj-ANbG7cNoLUKydk1_01IuCIUJtyj_t5nuGPqUYGq_gM7jPnOG6MWV0lpeG2-lSCWgOKHjOVw'),
dataset="pavilionall/s-17-dv-project-5", type="sql",
query='select county ,state, category , popdensity ,(FemaleFullTimeIncome/ MaleFullTimeIncome) as MFRatio
case
when MFRatio >= .65 then "01 Low"
when MFRatio >= .78 then "02 Med"
else  "03 High"
end as kpi from ETLOutMidwest e right outer join ETLCensusMaleFemaleIncome m on e.county = m.county and e.state = m.state order by popdensity group by state, category')
runApp('dvproject5/02 Shiney/ruizShiny')
shiny::runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select `Column A`,`Column C`, `Column E`,`Column G`,`Column I`,`Column K`,`Column M`,`Column O`,`Column Q`, `Column S`,`Column U`,`Column W`,`Column Y`,`Column AA`,`Column AC`,`Column AE`,`Column AG`,`Column AI`,`Column AN` from energyByState"')),httpheader=c(DB='jdbc:data:world:sql:pavilionall:s-17-dv-project-6', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
View(df)
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("State", "Abbreviation", "Region","Biomass","Geothermal","Solar","Wind","Hydro","HPS","Coal","Petroleum", "Gas","Nuclear" ,"Other", "Non-hydro RE Generation (MWh)", "Total RE Generation (MWh)","Total Generation (MWh)","Non-Hydro Renewable % of Total Generation", "Renewable % of Total Generation")
df <- df[-1,]
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select `Column A`,`Column C`, `Column E`,`Column G`,`Column I`,`Column K`,`Column M`,`Column O`,`Column Q`, `Column S`,`Column U`,`Column W`,`Column Y`,`Column AA`,`Column AC`,`Column AE`,`Column AG`,`Column AI` from energyByState"')),httpheader=c(DB='jdbc:data:world:sql:pavilionall:s-17-dv-project-6', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select `Column A`,`Column C`, `Column E`,`Column G`,`Column I`,`Column K`,`Column M`,`Column O`,`Column Q`, `Column S`,`Column U`,`Column W`,`Column Y`,`Column AA`,`Column AC`,`Column AE`,`Column AG`,`Column AI` from energyByState"')),httpheader=c(DB='jdbc:data:world:sql:pavilionall:s-17-dv-project-6', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("State", "Abbreviation", "Region","Biomass","Geothermal","Solar","Wind","Hydro","HPS","Coal","Petroleum", "Gas","Nuclear" ,"Other", "Non-hydro RE Generation (MWh)", "Total RE Generation (MWh)","Total Generation (MWh)","Non-Hydro Renewable % of Total Generation", "Renewable % of Total Generation")
df <- df[-1,]
View(df)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select `Column A`,`Column C`, `Column E`,`Column G`,`Column I`,`Column K`,`Column M`,`Column O`,`Column Q`, `Column S`,`Column U`,`Column W`,`Column Y`,`Column AA`,`Column AC`,`Column AE`,`Column AG`,`Column AI` from energyByState"')),httpheader=c(DB='jdbc:data:world:sql:pavilionall:s-17-dv-project-6', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("State", "Abbreviation", "Region","Biomass","Geothermal","Solar","Wind","Hydro","HPS","Coal","Petroleum", "Gas","Nuclear" ,"Other", "Non-hydro RE Generation (MWh)", "Total RE Generation (MWh)","Total Generation (MWh)","Non-Hydro Renewable % of Total Generation", "Renewable % of Total Generation")
df <- df[-1,]
print
print
colnames(df) <- c("State", "Abbreviation", "Region","Biomass","Geothermal","Solar","Wind","Hydro","HPS","Coal","Petroleum", "Gas","Nuclear" ,"Other", "Non-hydro RE Generation (MWh)", "Total RE Generation (MWh)","Total Generation (MWh)","Non-Hydro Renewable % of Total Generation", "Renewable % of Total Generation")
require(jsonlite)
require(readr)
require(plyr)
require(RCurl)
redacted = "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmZlcm5hbmRvcnVpeiIsImlzcyI6ImFnZW50OmZlcm5hbmRvcnVpejo6NmNjODQ5ODktOTJhYS00OTRjLTk5MWQtODgwMTc4MmI0NDI5IiwiaWF0IjoxNDg0Njk3MzAzLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.39MCSG-bnjjoaMUsOVErEGUxkk4ONQTDPXp9fn6rnnB6VG0guuOX0Km8StzlLCx1lFxbPERrd18iSpfrFJKROg"
username = 'fernandoruiz'
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5024/rest/native/?query="select `Column A`,`Column C`, `Column E`,`Column G`,`Column I`,`Column K`,`Column M`,`Column O`,`Column Q`, `Column S`,`Column U`,`Column W`,`Column Y`,`Column AA`,`Column AC`,`Column AE`,`Column AG`,`Column AI`, `Column AK` from energyByState"')),httpheader=c(DB='jdbc:data:world:sql:pavilionall:s-17-dv-project-6', USER= username, PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
print(summary(df))
print(head(df))
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
print(df[n])
}
colnames(df) <- c("State", "Abbreviation", "Region","Biomass","Geothermal","Solar","Wind","Hydro","HPS","Coal","Petroleum", "Gas","Nuclear" ,"Other", "Non-hydro RE Generation (MWh)", "Total RE Generation (MWh)","Total Generation (MWh)","Non-Hydro Renewable Percent Total Generation", "Renewable Percent Total Generation")
df <- df[-1,]
View(df)
write.csv(file="energyByStateClean.csv", x = df, row.names=FALSE, na = "")
shiny::runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/ruizShiny')
runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney/ruizShiny')
runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney/ruizShiny')
shiny::runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney/ruizShiny')
shiny::runApp('dvproject5/02 Shiney/ruizShiny')
runApp('dvproject5/02 Shiney/alvShiney')
runApp('dvproject5/02 Shiney')
runApp('dvproject5/02 Shiney')
runApp('dvproject5/02 Shiney')
runApp('dvproject5/02 Shiney')
shiny::runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney')
runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney')
runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney')
runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney')
runApp('dvproject5/02 Shiney')
runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney')
runApp('dvproject5/02 Shiney')
runApp('dvproject5/02 Shiney')
runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney')
setwd("C:/Users/Fernnando/Dropbox/UT/Senior/Spring '17/DataVisualisation/finalProject")
shiny::runApp('~/s17dvproject6-s17dvproject6-ruiz-temple-medel/02 Shiney')
